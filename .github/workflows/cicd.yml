name: CICD
on:
  push:
    branches:
      - master
      - develop
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      PATH_PROJECT_PREPROD: ${{ secrets.PATH_PROJECT_PREPROD }}
      PROJECT_URL: https://github.com/Edugame-Team/edugame2-back
    steps:
      - uses: actions/checkout@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver: docker
        
      - name: Set db connection
        run:  cp .env.default .env;
              sed -i "s/^\(DB_USERNAME=\)\(.*\)/\1${{ secrets.DEV_DB_USERNAME }}/" .env;
              sed -i "s/^\(DB_PASSWORD=\)\(.*\)/\1${{ secrets.DEV_DB_PASSWORD }}/" .env;
              sed -i "s/^\(DB_DATABASE=\)\(.*\)/\1${{ secrets.DEV_DB_DATABASE }}/" .env;
              sed -i "s/^\(DB_HOST=\)\(.*\)/\1${{ secrets.DEV_DB_HOST }}/" .env;
              sed -i "s/^\(DB_DIALECT=\)\(.*\)/\1${{ secrets.DEV_DB_DIALECT }}/" .env;
              sed -i "s/^\(DB_PORT=\)\(.*\)/\1${{ secrets.DEV_DB_PORT }}/" .env
              
      - name: get current version
        run:  echo "EDUGAME_PROJECT_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            edugame/back:latest
            edugame/back:staging
            edugame/back:${{ env.EDUGAME_PROJECT_VERSION }}
