name: CICD
on:
  push:
    branches:
      - master
      - develop
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      PATH_PROJECT_PREPROD: ${{ secrets.PATH_PROJECT_PREPROD }}
      PROJECT_URL: https://github.com/Edugame-Team/edugame2-back
    steps:
      - name: executing remote script -> Preprod
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@master
        env:
          DB_USERNAME: ${{ secrets.DEV_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DEV_DB_USERNAME }}
          DB_DATABASE: ${{ secrets.DEV_DB_DATABASE }}
          DB_HOST: ${{ secrets.DEV_DB_HOST }}
          DB_DIALECT: ${{ secrets.DEV_DB_DIALECT }}
          DB_PORT: ${{ secrets.DEV_DB_PORT }}
        with:
          host: ${{ secrets.SSH_HOST_PREPROD }}
          username: ${{ secrets.SSH_USERNAME_PREPROD }}
          password: ${{ secrets.SSH_PASSWORD_PREPROD }}
          port: ${{ secrets.SSH_PORT_PREPROD }}
          envs: DB_USERNAME,DB_PASSWORD,DB_DATABASE,DB_HOST,DB_DIALECT,DB_PORT
          script: |
            cd /var/www/edugame/preprod
            git clone https://github.com/Edugame-Team/edugame2-back
            cd edugame2-back
            git checkout develop
            git pull
            cp -f .env.default .env
            sed -i "s/^\(DB_USERNAME=\)\(.*\)/\1$DB_USERNAME/" .env
            sed -i "s/^\(DB_PASSWORD=\)\(.*\)/\1$DB_PASSWORD/" .env
            sed -i "s/^\(DB_DATABASE=\)\(.*\)/\1$DB_DATABASE/" .env
            sed -i "s/^\(DB_HOST=\)\(.*\)/\1$DB_HOST/" .env
            sed -i "s/^\(DB_DIALECT=\)\(.*\)/\1$DB_DIALECT/" .env
            sed -i "s/^\(DB_PORT=\)\(.*\)/\1$DB_PORT/" .env
            docker-compose up -d --build db --no-recreate
            docker-compose -p edugame_back_dev up -d --build api
      - name: executing remote script -> Prod
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        env:
          DB_USERNAME: ${{ secrets.PROD_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.PROD_DB_DATABASE }}
          DB_HOST: ${{ secrets.PROD_DB_HOST }}
          DB_DIALECT: ${{ secrets.PROD_DB_DIALECT }}
          DB_PORT: ${{ secrets.PROD_DB_PORT }}
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USERNAME_PROD }}
          password: ${{ secrets.SSH_PASSWORD_PROD }}
          port: ${{ secrets.SSH_PORT_PROD }}
          envs: DB_USERNAME,DB_PASSWORD,DB_DATABASE,DB_HOST,DB_DIALECT,DB_PORT
          script: |
            cd /var/www/edugame/prod
            git clone https://github.com/Edugame-Team/edugame2-back
            cd edugame2-back
            git checkout master
            git pull
            cp -f .env.default .env
            sed -i "s/^\(DB_USERNAME=\)\(.*\)/\1$DB_USERNAME/" .env
            sed -i "s/^\(DB_PASSWORD=\)\(.*\)/\1$DB_PASSWORD/" .env
            sed -i "s/^\(DB_DATABASE=\)\(.*\)/\1$DB_DATABASE/" .env
            sed -i "s/^\(DB_HOST=\)\(.*\)/\1$DB_HOST/" .env
            sed -i "s/^\(DB_DIALECT=\)\(.*\)/\1$DB_DIALECT/" .env
            sed -i "s/^\(DB_PORT=\)\(.*\)/\1$DB_PORT/" .env
            docker-compose up -d --build db --no-recreate
            docker-compose -p edugame_back_main up -d --build api
